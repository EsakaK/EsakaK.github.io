{"meta":{"title":"EsakaK的微语世界","subtitle":"","description":"你在追寻不曾属于你的东西","author":"Esaka Kyo","url":"https://esakak.github.io","root":"/"},"pages":[{"title":"分类","date":"2022-04-27T07:11:26.000Z","updated":"2025-09-10T13:23:43.944Z","comments":true,"path":"categories/index.html","permalink":"https://esakak.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-04-27T07:10:07.000Z","updated":"2025-09-10T13:23:44.062Z","comments":true,"path":"tags/index.html","permalink":"https://esakak.github.io/tags/index.html","excerpt":"","text":""},{"title":"","date":"2025-09-10T13:23:44.062Z","updated":"2025-09-10T13:23:44.062Z","comments":true,"path":"my_css/my_style.css","permalink":"https://esakak.github.io/my_css/my_style.css","excerpt":"","text":"#div_img{ display: flex; }"}],"posts":[{"title":"重拾博客","slug":"20250910","date":"2025-09-10T15:07:00.000Z","updated":"2025-09-10T15:16:35.667Z","comments":true,"path":"2025/09/10/20250910/","link":"","permalink":"https://esakak.github.io/2025/09/10/20250910/","excerpt":"","text":"重拾博客 今天是2025年9月10日,是个特殊的日子。一是我和我女朋友的两年恋爱纪念日，这两年来我们留下了许许多多现在看来美好的回忆，让我发现美好会刻在生命中的每个时刻，也反面提醒我珍惜当下发生的一切，这也是我今天重启博客的一个重要原因。另一个是今天是教师节，尽管这个节日和我关系不大，但是因为近期实验室的一些变化与“教师”有关，因此他也算是一个特殊的日子。 总之，我要继续开始写博客了，主要还是觉得一个人如果只有被动的输入在某些时候实在闷得慌。当然，我女朋友充当了很重要的倾听角色，缓解了我很多的焦虑和苦闷。但仍然不影响我通过博客的方式来记录生活、发表感想。希望这会是一个好的开始！","categories":[{"name":"Life","slug":"Life","permalink":"https://esakak.github.io/categories/Life/"}],"tags":[{"name":"生活","slug":"生活","permalink":"https://esakak.github.io/tags/%E7%94%9F%E6%B4%BB/"}]},{"title":"SHM","slug":"SHM","date":"2023-01-04T13:07:17.000Z","updated":"2025-09-10T13:23:43.941Z","comments":true,"path":"2023/01/04/SHM/","link":"","permalink":"https://esakak.github.io/2023/01/04/SHM/","excerpt":"","text":"前言 入了编码的坑，逃不开使用目前最前沿的传统编解码器的测试软件。与大多数人不同的是，我的尝试竟然是从Scalable Video Coding开始的。本篇文章记录一下SHM-12.4（HEVC Scalable Extension）的安装和使用过程。 安装 下载 这里提供一下SHM的所有版本的SVN版本管理仓库SHM。 SHM所有版本 我是下载了最新的版本，即SHM-12.4。这里需要注意的是，SHM的代码通过svn管理，不能够直接下载，需要使用svn的工具clone仓库来得到，关于svn的工具可以自行搜索啦。 编译 我是在Linux发行版Manjaro的机器上编译的，在根文件夹下使用make命令就可以很简单的编译。这里需要注意的一点是，在linux下的编译SHM或者HM，需要到linux文件夹下删除common文件夹下makefile.base的-Werror选项，再在linux下运行终端make编译，否则会因为warning而阻断编译过程。 对于Windows环境下的编译，我也尝试过，使用visual studio 2019打开build文件夹下的vc2017.sln解决方案，然后和其他cpp项目一样进行编译即可。 使用 添加环境变量可以方便使用编解码器，或者设置alias。 这里主要说一下命令。SHM的编码和HM的编码有一点点不同。 主要配置文件 在HM中，譬如要与端到端学习方法的网络作性能对比，我们会使用low_delay_p的参考配置文件。在SHM中，对yuv444没有提供low_delay_p的配置文件，只能通过提供的Rext的random access配置文件修改得到。其实就是改一下 两个层开头的profile项。我使用的编码yuv444的low_delay_p配置文件如下： 123456789101112131415161718192021222324252627282930313233343536373839404142#======== File I/O =====================BitstreamFile : str.bin#ReconFile : rec.yuv#======== Profile ================NumProfileTierLevel : 3Profile0 : main_444 # Profile for BL (NOTE01: this profile applies to whole layers but only BL is outputted) # (NOTE02: this profile has no effect when NonHEVCBase is set to 1)Profile1 : main_444 # Profile for BL (NOTE01: this profile applies to HEVC BL only) # (NOTE02: When NonHEVCBase is set to 1, this profile &amp; associated level should be updated appropriately)Profile2 : scalable-main_444 # Scalable profile#======== Unit definition ================#MaxCUWidth : 64 # Maximum coding unit width in pixel#MaxCUHeight : 64 # Maximum coding unit height in pixel#MaxPartitionDepth : 4 # Maximum coding unit depth#QuadtreeTULog2MaxSize : 5 # Log2 of maximum transform size for # quadtree-based TU coding (2...6)#QuadtreeTULog2MinSize : 2 # Log2 of minimum transform size for # quadtree-based TU coding (2...6)#QuadtreeTUMaxDepthInter : 3#QuadtreeTUMaxDepthIntra : 3#======== Coding Structure =============#IntraPeriod : -1 # Period of I-Frame ( -1 = only first)DecodingRefreshType : 0 # Random Accesss 0:none, 1:CRA, 2:IDR, 3:Recovery Point SEIGOPSize : 4 # GOP Size (number of B slice = GOPSize-1)# Type POC QPoffset CbQPoffset CrQPoffset QPfactor tcOffsetDiv2 betaOffsetDiv2 temporal_id #ref_pics_active #ref_pics reference pictures predict deltaRPS #ref_idcs reference idcsFrame1: P 1 3 0 0 0.4624 0 0 0 4 4 -1 -5 -9 -13 0Frame2: P 2 2 0 0 0.4624 0 0 0 4 4 -1 -2 -6 -10 1 -1 5 1 1 1 0 1Frame3: P 3 3 0 0 0.4624 0 0 0 4 4 -1 -3 -7 -11 1 -1 5 0 1 1 1 1Frame4: P 4 1 0 0 0.578 0 0 0 4 4 -1 -4 -8 -12 1 -1 5 0 1 1 1 1#=========== Motion Search =============FastSearch : 1 # 0:Full search 1:TZ searchSearchRange : 64 # (0: Search range is a Full frame)BipredSearchRange : 4 # Search range for bi-prediction refinementHadamardME : 1 # Use of hadamard measure for fractional MEFEN : 1 # Fast encoder decisionFDM : 1 # Fast Decision for Merge RD cost... 完整的文件之后会提供。 针对每个序列的配置文件 这里我取名为test.cfg是对每个特定序列的配置文件，主要需要提供输入文件路径、分辨率还有帧率等控制信息。 12345678910111213141516171819202122232425262728293031FrameSkip : 0 # Number of frames to be skipped in inputFramesToBeEncoded : 36 # Number of frames to be codedLevel0 : 4 # Level of the whole bitstreamLevel1 : 4 # Level of the base layerLevel2 : 4 # Level of the enhancement layer#======== File I/O ===============InputFile0 : E:\\dataset\\HEVC_yuv444_ds\\ClassD\\BasketballPass_208x120_50.yuvFrameRate0 : 50 # Frame Rate per secondInputBitDepth0 : 8 # Input bitdepth for layer 0InputChromaFormat : 444 # Ratio of luminance to chrominance samplesSourceWidth0 : 208 # Input frame widthSourceHeight0 : 120 # Input frame heightRepFormatIdx0 : 0 # Index of corresponding rep_format() in the VPSIntraPeriod0 : 12 # Period of I-Frame ( -1 = only first)ConformanceMode0 : 1 # conformance modeQP0 : 22LayerPTLIndex0 : 1InputFile1 : E:\\dataset\\HEVC_yuv444\\ClassD\\BasketballPass_416x240_50.yuvFrameRate1 : 50 # Frame Rate per secondInputBitDepth1 : 8 # Input bitdepth for layer 1InputChromaFormat : 444 # Ratio of luminance to chrominance samplesSourceWidth1 : 416 # Input frame widthSourceHeight1 : 240 # Input frame heightRepFormatIdx1 : 1 # Index of corresponding rep_format() in the VPSIntraPeriod1 : 12 # Period of I-Frame ( -1 = only first)ConformanceMode1 : 1 # conformance modeQP1 : 22LayerPTLIndex1 : 2 Layers配置 这是HM中所没有的配置文件，主要给出scalable的设置。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667NumLayers : 2NonHEVCBase : 0ScalabilityMask1 : 0 # MultiviewScalabilityMask2 : 1 # ScalableScalabilityMask3 : 0 # Auxiliary picturesAdaptiveResolutionChange : 0 # Resolution change frame (0: disable)SkipPictureAtArcSwitch : 0 # Code higher layer picture as skip at ARC switching (0: disable (default), 1: enable)MaxTidRefPresentFlag : 1 # max_tid_ref_present_flag (0=not present, 1=present(default))CrossLayerPictureTypeAlignFlag: 1 # Picture type alignment across layersCrossLayerIrapAlignFlag : 1 # Align IRAP across layersSEIDecodedPictureHash : 1#============= LAYER 0 ==================QP0 : 22MaxTidIlRefPicsPlus10 : 2 # max_tid_il_ref_pics_plus1 for layer0#============ Rate Control ==============RateControl0 : 0 # Rate control: enable rate control for layer 0TargetBitrate0 : 1000000 # Rate control: target bitrate for layer 0, in bpsKeepHierarchicalBit0 : 1 # Rate control: keep hierarchical bit allocation for layer 0 in rate control algorithmLCULevelRateControl0 : 1 # Rate control: 1: LCU level RC for layer 0; 0: picture level RC for layer 0RCLCUSeparateModel0 : 1 # Rate control: use LCU level separate R-lambda model for layer 0InitialQP0 : 0 # Rate control: initial QP for layer 0RCForceIntraQP0 : 0 # Rate control: force intra QP to be equal to initial QP for layer 0#============ WaveFront ================WaveFrontSynchro0 : 0 # 0: No WaveFront synchronisation (WaveFrontSubstreams must be 1 in this case). # &gt;0: WaveFront synchronises with the LCU above and to the right by this many LCUs.#=========== Quantization Matrix =================ScalingList0 : 0 # ScalingList 0 : off, 1 : default, 2 : file readScalingListFile0 : scaling_list0.txt # Scaling List file name. If file is not exist, use Default Matrix. #============= LAYER 1 ==================QP1 : 20NumSamplePredRefLayers1 : 1 # number of sample pred reference layersSamplePredRefLayerIds1 : 0 # reference layer idNumMotionPredRefLayers1 : 1 # number of motion pred reference layersMotionPredRefLayerIds1 : 0 # reference layer idNumActiveRefLayers1 : 1 # number of active reference layersPredLayerIds1 : 0 # inter-layer prediction layer index within available reference layers#============ Rate Control ==============RateControl1 : 0 # Rate control: enable rate control for layer 1TargetBitrate1 : 1000000 # Rate control: target bitrate for layer 1, in bpsKeepHierarchicalBit1 : 1 # Rate control: keep hierarchical bit allocation for layer 1 in rate control algorithmLCULevelRateControl1 : 1 # Rate control: 1: LCU level RC for layer 1; 0: picture level RC for layer 1RCLCUSeparateModel1 : 1 # Rate control: use LCU level separate R-lambda model for layer 1InitialQP1 : 0 # Rate control: initial QP for layer 1RCForceIntraQP1 : 0 # Rate control: force intra QP to be equal to initial QP for layer 1#============ WaveFront ================WaveFrontSynchro1 : 0 # 0: No WaveFront synchronisation (WaveFrontSubstreams must be 1 in this case). # &gt;0: WaveFront synchronises with the LCU above and to the right by this many LCUs.#=========== Quantization Matrix =================ScalingList1 : 0 # ScalingList 0 : off, 1 : default, 2 : file readScalingListFile1 : scaling_list1.txt # Scaling List file name. If file is not exist, use Default Matrix. NumLayerSets : 2 # Include default layer set, value of 0 not allowedNumLayerInIdList1 : 2 # 0-th layer set is default, need not specify LayerSetLayerIdList0 or NumLayerInIdList0LayerSetLayerIdList1 : 0 1NumAddLayerSets : 0NumOutputLayerSets : 2 # Include defualt OLS, value of 0 not allowedDefaultTargetOutputLayerIdc : 1NumOutputLayersInOutputLayerSet : 1 # The number of layers in the 0-th OLS should not be specified, # ListOfOutputLayers0 need not be specifiedListOfOutputLayers1 : 1ListOfProfileTierLevelOls1 : 1 2 编码命令 一次测试编码的命令可以如下： 1SHMEnc -c my_cfg/test/low_delay_P_scalable.cfg -c my_cfg/test/test.cfg -c my_cfg/test/layers.cfg -q0 22 -q1 22 -b str/test.bin -o0 rec/test.yuv -o1 rec/test1.yuv 其中SHMEnc是我设置的alias，实际使用时替换编译的TAppEncoderStatic即可。上述命令中-c之后接的便是三个配置文件，后覆盖前。-q0和-q1是对基本层和增强层的QP参数的覆盖。 在命令行中使用额外配置覆盖配置文件里的参数设置的话，最好使用TAppEncoderStatic -help查看对应的-x选项，而且似乎--X的选项不起作用，最好有-x的选项。 结果 上述命令的编码结果如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147SHM software: Encoder Version [12.4 (HM-16.10)][Linux][GCC 12.1.1][64 bit] Default OLS defined. Ignoring ListOfOutputLayers1Warning: Level0 is set the same as Level1Warning: Level0 is set the same as Level1Total number of layers : 2Multiview : 0Scalable : 1Base layer : HEVCAuxiliary pictures : 0Adaptive Resolution Change : 0Skip picture at ARC switch : 0Align picture type : 1Cross layer IRAP alignment : 1IDR only for IRAP : 1InterLayerWeightedPred : 0=== Layer 0 settings ===Input File : /home/esakak/dataset/HEVC_yuv444_ds/ClassD/BasketballPass_208x120_50.yuvReconstruction File : /home/esakak/dataset/HEVC_yuv444_compress/ClassD/BasketballPass_416x240_50/22_BL.yuvReal Format : 208x120 50HzInternal Format : 208x120 50HzPTL index : 1Profile : main-RExt (main_444)CU size / depth / total-depth : 64 / 4 / 4RQT trans. size (min / max) : 4 / 32Max RQT depth inter : 3Max RQT depth intra : 3Intra period : 12QP : 22.00Max dQP signaling depth : 0Input bit depth : (Y:8, C:8)MSB-extended bit depth : (Y:8, C:8)Internal bit depth : (Y:8, C:8)PCM sample bit depth : (Y:8, C:8)Input ChromaFormatIDC : 4:4:4Output (internal) ChromaFormatIDC : 4:4:4RateControl : 0=== Layer 1 settings ===Input File : /home/esakak/dataset/HEVC_yuv444/ClassD/BasketballPass_416x240_50.yuvReconstruction File : /home/esakak/dataset/HEVC_yuv444_compress/ClassD/BasketballPass_416x240_50/22_EL.yuvReal Format : 416x240 50HzInternal Format : 416x240 50HzPTL index : 2Profile : scalable-RExtCU size / depth / total-depth : 64 / 4 / 4RQT trans. size (min / max) : 4 / 32Max RQT depth inter : 3Max RQT depth intra : 3Intra period : 12QP : 22.00Max dQP signaling depth : 0Input bit depth : (Y:8, C:8)MSB-extended bit depth : (Y:8, C:8)Internal bit depth : (Y:8, C:8)PCM sample bit depth : (Y:8, C:8)Input ChromaFormatIDC : 4:4:4Output (internal) ChromaFormatIDC : 4:4:4RateControl : 0=== Common configuration settings === Bitstream File : /home/esakak/dataset/HEVC_yuv444_compress/ClassD/BasketballPass_416x240_50/22.binSequence PSNR output : Linear average onlySequence MSE output : DisabledFrame MSE output : DisabledCabac-zero-word-padding : EnabledFrame/Field : Frame based codingFrame index : 0 - 35 (36 frames)Min PCM size : 8Motion search range : 64Decoding refresh type : 0Cb QP Offset : 0Cr QP Offset : 0QP adaptation : 0 (range=0)GOP size : 4Intra reference smoothing : Enableddiff_cu_chroma_qp_offset_depth : -1extended_precision_processing_flag : Disabledimplicit_rdpcm_enabled_flag : Disabledexplicit_rdpcm_enabled_flag : Disabledtransform_skip_rotation_enabled_flag : Disabledtransform_skip_context_enabled_flag : Disabledcross_component_prediction_enabled_flag: Disabledhigh_precision_offsets_enabled_flag : Disabledpersistent_rice_adaptation_enabled_flag: Disabledcabac_bypass_alignment_enabled_flag : Disabledlog2_sao_offset_scale_luma : 0log2_sao_offset_scale_chroma : 0Cost function: : Lossy coding (default)WPMethod : 0Max Num Merge Candidates : 5Layer0 TOOL CFG: IBD:0 HAD:1 RDQ:1 RDQTS:1 RDpenalty:0 SQP:0 ASR:0 MinSearchWindow:8 RestrictMESampling:0 FEN:1 ECU:0 FDM:1 CFM:0 ESD:0 RQT:1 TransformSkip:1 TransformSkipFast:1 TransformSkipLog2MaxSize:2 Slice: M=0 SliceSegment: M=0 CIP:0 SAO:1 PCM:0 TransQuantBypassEnabled:0 WPP:0 WPB:0 PME:2 WaveFrontSynchro:0 WaveFrontSubstreams:1 ScalingList:0 TMVPMode:1 AQpS:0 SignBitHidingFlag:1 RecalQP:0Layer1 TOOL CFG: IBD:0 HAD:1 RDQ:1 RDQTS:1 RDpenalty:0 SQP:0 ASR:0 MinSearchWindow:8 RestrictMESampling:0 FEN:1 ECU:0 FDM:1 CFM:0 ESD:0 RQT:1 TransformSkip:1 TransformSkipFast:1 TransformSkipLog2MaxSize:2 Slice: M=0 SliceSegment: M=0 CIP:0 SAO:1 PCM:0 TransQuantBypassEnabled:0 WPP:0 WPB:0 PME:2 WaveFrontSynchro:0 WaveFrontSubstreams:1 ScalingList:0 TMVPMode:1 AQpS:0 SignBitHidingFlag:1 RecalQP:0SHVC TOOL CFG: ElRapSliceType: P-slice REF_IDX_ME_ZEROMV: 1 ENCODER_FAST_MODE: 1 FIS:0 CGS: 0 CGSMaxOctantDepth: 1 CGSMaxYPartNumLog2: 2 CGSLUTBit:12 CGSAdaptC:1 Non-environment-variable-controlled macros set as follows: RExt__DECODER_DEBUG_BIT_STATISTICS = 0 RExt__HIGH_BIT_DEPTH_SUPPORT = 0 RExt__HIGH_PRECISION_FORWARD_TRANSFORM = 0 O0043_BEST_EFFORT_DECODING = 0 ME_ENABLE_ROUNDING_OF_MVS = 1 U0040_MODIFIED_WEIGHTEDPREDICTION_WITH_BIPRED_AND_CLIPPING = 1POC 0 LId: 0 TId: 0 ( I-SLICE IDR_W_RADL, nQP 22 QP 22 ) 45520 bits [Y 42.6642 dB U 45.4023 dB V 45.3845 dB] [ET 0 ] [L0 ] [L1 ] [MD5:fe712c2b61f71e4b5dc7376da4ef6f0a,7c1dbc6a4e43bd5e47846dbc8e8776a9,81d9c108343a39760ba39bd565157ee8]POC 0 LId: 1 TId: 0 ( P-SLICE IDR_W_RADL, nQP 22 QP 22 ) 130704 bits [Y 42.6773 dB U 46.9517 dB V 47.1605 dB] [ET 1 ] [L0 0(0, &#123;2.00, 2.00&#125;x) ] [L1 ] [MD5:df1ab9ec67d7e69b9dab57f283e136f1,4f94b740807d08b8d2445754bb163b02,73fceea56d5db7d61001e811819c2a66]...POC 35 LId: 1 TId: 0 ( P-SLICE TRAIL_R, nQP 25 QP 25 ) 18768 bits [Y 40.5750 dB U 45.5604 dB V 45.1281 dB] [ET 1 ] [L0 34 32 28 24 35(0, &#123;2.00, 2.00&#125;x)c ] [L1 ] [MD5:397a66f8e9a9abafd5c43ae10d15a422,55dc4d7b3f844663396ee9ea69537ca1,07e2c71f64b0af6167fd121f2c37b9e3]SUMMARY -------------------------------------------------------- Total Frames | Bitrate Y-PSNR U-PSNR V-PSNR YUV-PSNR L0 36 a 423.0444 41.2625 44.8498 44.6139 43.2006 L1 36 a 1242.2556 41.3297 46.0205 45.9016 43.7850I Slices-------------------------------------------------------- Total Frames | Bitrate Y-PSNR U-PSNR V-PSNR YUV-PSNR L0 3 i 2148.9333 42.7306 45.5759 45.6468 44.4244 L1 0 i -nan -nan -nan -nan -nanP Slices-------------------------------------------------------- Total Frames | Bitrate Y-PSNR U-PSNR V-PSNR YUV-PSNR L0 33 p 266.1455 41.1290 44.7838 44.5200 43.1047 L1 36 p 1242.2556 41.3297 46.0205 45.9016 43.7850B Slices-------------------------------------------------------- Total Frames | Bitrate Y-PSNR U-PSNR V-PSNR YUV-PSNR L0 0 b -nan -nan -nan -nan -nan L1 0 b -nan -nan -nan -nan -nanRVM[L0]: 0.000RVM[L1]: 0.000Bytes written to file: 154292 (1714.356 kbps) Total Time: 39.823 sec. 这里其实存在着问题，L0和L1相对于实际写入文件的码率(1714.356 kbps)之间存在着不小的GAP，目前还没有弄明白原因是什么。 而且，我测试了HEVC ClassD上的平均RD性能，使用QP=[42,37,32,27]，结果和HM相比，效果竟然好的离谱。我还不清楚是我的psnr和bpp的计算出错了，还是配置文件弄错了。 这些地方还有待考察。 SHM test on ClassD 这里展示了其与DCVC的比较，存在着非长大的GAP，我一度质疑我的结果。但如果真的是如此，基于端到端做到如此的效果是否太过困难，开始担心毕业了有没有........ 后续，这里的问题出现在PSNR的计算上，需要将图像转成浮点数类型计算mse最终得到PSNR，否则PSNR会因为整数取证偏大。 附录 low_delay_P_scalable.cfg test.cfg layers.cfg","categories":[{"name":"Experimental Notes.","slug":"Experimental-Notes","permalink":"https://esakak.github.io/categories/Experimental-Notes/"}],"tags":[{"name":"学习","slug":"学习","permalink":"https://esakak.github.io/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"传统编码","slug":"传统编码","permalink":"https://esakak.github.io/tags/%E4%BC%A0%E7%BB%9F%E7%BC%96%E7%A0%81/"}]},{"title":"梦想-现实-希望","slug":"20220609","date":"2022-06-09T15:07:00.000Z","updated":"2025-09-10T15:24:21.988Z","comments":true,"path":"2022/06/09/20220609/","link":"","permalink":"https://esakak.github.io/2022/06/09/20220609/","excerpt":"","text":"自创建了这个文档到现在已经过去了整整两周了，我却一直拖到现在才开始着手总结（还是因为看论文看累了）。我不敢保证我可以一次性写完这个总结，或者说肯定不可以，毕竟我立了12点之前一定入睡的flag，而此刻已经是2022年6月23日晚上10点03分了。但是，反正是我自己的博客，我也就别当一份任务，随意地写吧。（最后一次更新是2022年的7月17日，于中国科学技术大学高新校区信智楼，我果然是个拖延症晚期患者） 在这个本科四年的总结中，我不打算过多地去叙述我学到了什么，学会了什么，更多地是对自己心路历程的一段总结。主要原因是我觉得本科四年我的思维、认知和价值观变换得过于频繁，人也生活在一段心力交瘁的时光当中，一篇偏向于感性的总结更有利于我承前启后，把在本科这段时间里养成的混乱思维给快刀斩乱麻地给理清了，从而为之后的生活提供经验，或者说是甩掉一段思想上的包袱。 2018年踏入同济 明天就是高考揭榜日了，距离我查阅到高考分数的那个难忘的日子已经过去了4年之久。姑且不谈我对高考这一应试教育模式的态度，不得不说对每一个通过高考来获得本科入学门票的高考学子而言，这一天都是充满激情、狂欢或者是无比的失落的。我相信很多达到满意分数的高考生和我一样，在得知自己分数和省排名后的那一刻，会认为自己是成功的。我还记得我那一刻甚至觉得自己就是人生赢家，省800的排名可以为我挣得除清北复交外几乎所有985的门票，以至于我查完分数后打LOL时都在聊天栏和队友开心地讨论自己的分数。 这样的喜悦一直持续到开学报道后的几周。带着通知书踏入同济大学的大门，看着周围和我一样的学子都满脸笑容地在“迎新大牌”前和父母合照，这本身就是一件极其值得永久回味的记忆。 为了企图让我的大学生活充满规划，我为自己设立了几个目标：练好篮球、练好吉他、谈一个女朋友（最好是上财的）、积极参加社团活动、开启我的科研生涯等。我也对这个计划付诸了行动，在开学的几周里，我没事就会去篮球场打打球；我还跑遍了学校周围寻找一个合适的乐室；我当然也会注意令我心动的女生；报名了吉他社团和学生会的面试；与我的本科生导师约定见一次面。我对待一切都是那么的积极和乐观，脱离了高中枯燥的生活，我感觉我会迎来我丰富多彩的大学本科生活。 镜花水月 以上的flags，现在看来本科阶段我只实现了其中之一——练好吉他。flag倒掉的原因有很多，但无非是外部和内部两个，其中我认为（只是我自己认为）属于外部原因的是：开启科研、参加社团，属于内部原因的是：练好篮球，无法划定界限的是：谈一个女朋友。噗，对于最后一个我比较倾向于外部环境原因的，我真的遇不到一个对我也一见钟情的好女孩（我只相信一见钟情，追到的感情，不喜欢的感觉终究会在某一个时刻爆发）。 以上的flags可以说是我对大学生活的美好向往，接近于梦想。但是随着大学生活地一步步深入，我经历并思考了更加深刻的现实困境。 GPA 985大学校园里永远离不开的话题便是GPA，在陆本这是评价一个本科生实力的绝对指标，也是能否顺利保送研究生的最主要因素。大一上学期，由于我目光的短浅和认知的缺陷，我甚至不清楚GPA的基本概念和经营方法，我带着兴趣和热情去学习每一门课程，用暂存的知识去应付考试。这使得我经历了本科的第一个滑铁卢。还记得寒假查到选课网3.8/5.0的成绩，那时户外的烟花已经升起、鞭炮已经放响，我的内心却是无比的失落。我无法接受我在班里成绩倒数的现实。那个寒假我在近乎抑郁的情绪中为自己思考出了一个合理的解释——你一个大学生不好好的追求成绩还要什么？ 于是我在年后的下学期中，近乎苛刻地要求自己，断绝娱乐APP和游戏，早上6点起床去跑步，每天除了学习就是吃饭。这里插一句的是，这样的模式反而让我觉得很快乐，很有成就感，我觉得这得益于自律本身的快乐。然而，这样的模式却会让我因为一次迟到而焦虑许久，要知道在CS系，一点点的差距很有可能导致保研的失败。就这样的模式经历了一学期，期末考试周我也改变了策略，采用刷题而不是情怀的方式来应对考试。最终我除了体育一门良之外所有的课程均是满绩，达到了4.92/5.0的学期成绩，总绩点也拉到了4.2，似乎我不是那么差劲了… 但是好景不长，在紧接着的暑假里，我仍然秉承“刻苦学习，断绝娱乐”的思维模式，在本该放松的时间段里给自己施加了过大的压力，以至于我在经历了一个学期快乐的情绪后，在暑期却陷入了相较颓废的状态。而且这个折中的状态一直持续到大二上学期结束，这就导致了我的GPA在这个学期中只有4.7，而4.7是无法使得我的总绩点达到前列的。到此为止，我的成绩维持在了班级8/32这样的水平，而后也几乎就保持在了这个水平。 出国?保研?考研? 我在意识到我可能无法在国内保研后，我便开始了解有关出国的消息，这也是我情绪开始陷入低谷的开始，本科的第二次滑铁卢。大二那年寒假，全国爆发了新冠肺炎疫情，所以之后的下半学期我们都在家里以网课的形式上课。我受到一次学姐出国宣讲会的影响，开始关注这个可能的升学途径，而且由于我自己的认知水平低下、做事急躁等等缺点，我在没有深入了解的情况下，就甩了3W多给了中介，之后他们给我安排的项目也证明这样的决定是我自己的问题。然而，这都不是什么大问题，我的情绪开始出现极其剧烈的波动才是准备出国给我带来的最大伤害。首先，出国这个决定本身是没有问题的，任何学生只要家庭条件允许都可以走这一条路。但是恰逢不巧，当年新冠疫情肆虐全球，很多国家都暂停了留学生签证，缩进了出入境政策。这也导致我周围父母认识的很多家里孩子或是没法出国读书，在家上网课或是放弃了出国的打算。于是乎我的父母成了我走这一条路的第一个阻碍，由于我不能返校，我每天生活在自己家里，自然少不了他们旁指曲谕般的话语。在我刚做出决定，自己也还有很多未知的事情要去学习和了解的时候，我得不到一个适当的支持而是恻隐地发对，我不知不觉地就形成了一个矛盾的心理和思维。我自己的意志不够坚定，但是内心又是做出了决定，再加上父母某些话客观上又确实有道理，我就陷入了每天头脑里来来复复、永无止境地自我怀疑和自我否定中。这大二下开始到大三上这一年中，我足足瘦了10多斤，我在边准备英语考试、边维持GPA还要承受这种自我怀疑的思维中实在是太痛苦了，痛苦到我想放弃出国，另寻他路… 最后，我给了我自己一个解释，“我科研水平不够，申请不到较好的学校，与其如此，倒不如国内读研，积累科研经验？”我很擅长骗自己，包括大一下骗自己疯狂式地学习一样，我要骗自己相信自己现在出国是个错误的决定。还记得大三上的寒假我在麦当劳遇到了ShaoZuo(ShaoZuo是我系的优秀学子，本科手握3篇顶会论文，including CVPR)。他当时也在准备出国申请，所以也询问了我的情况。我和他说我放弃了出国了，打算国内读研了，他很是吃惊，因为在他看来国内读研是一个付出和收益不成正比的决定，这更体现在考研的学生身上。我和他解释说，我没有像他一样的科研成果，自己可能更需要在国内锻炼锻炼。当我解释的时候，也是在强化性地骗自己，我“真的”不适合现在出国读书，还是赶快丢掉这个想法，安安稳稳国内读研吧。 那个寒假我去了一个在合肥的科技公司实习，那个公司的高管都是中科大的alumni，我就说要不就上中科大吧，毕竟当时高考就差1分，也算是小时候的一个梦中情校了。此刻作出这个新的决定相对于出国的决定更易实现的原因如下：第一，国内的疫情相对稳定了，我父母在这方面是肯定会全力支持的；第二，不论是保研还是考研，对科研实力都没有那么那么的看重，保研看GPA，考研当然就看分数，所以这对于我给自己的解释而言也过意的去。我的成绩一直维持在班级7\\8\\9这样，我不能保证我们班级可以给到这么多的保研名额，于是我在3月份就开始准备考研的相关事宜，把考研作为第一手选择… 考研之战 选择专业 寒假时在的公司里，高管们大多数来自于中科大6系和10系，这是两个属于信息学院的科系，而他们做的产品是一种low level的工业级目标检测属于CV领域的工业应用。这也让我开始思考是否有必要头铁报考计算机学院与海量竞争者硬卷上岸（科大计算机的初试分数在我考试的前一年达到了390分，我不能够保证我一定可以成功上岸）。6系的初试分数在前一年仅仅只有320分左右，唯一的困难是相关的课程我丝毫没有接触过。 不过我不知为何，毅然决然地选择了跨考6系电子信息，当时的我觉得能够进6系跟一个做CV相关的导师，那么和入计算机其实没什么区别，况且6系分数还在可以保证的范围内。至于丝毫没学过的专业课，我十分相信我的自学能力。 备战 尽管我相信我专业课自学完全没问题，但是仍然心存顾虑，因为科大的专业课843——信号与系统、数字信号处理是学校自主命题，难度据说是全国第一难。所以我3月份开始就着手自学那本厚达500多页的专业书籍《信号与系统》，以及复习数学的相关知识。而大三下和大四上的少数学校课程，我抱着纯水的态度去应付，只求及格便可（事后发现其实不是我水，是这些课真的很水，而且大家都很水，我的分布式数据库的课程设计似乎做得还可以排的上游）。 政治和英语我倒不想说啥，政治我是从10月份跟着徐涛老师过知识点的，最后一周疯狂背大题。英语我甚至没正经背过单词和做过题，只在考试前做了3套真题卷就上了考场。而且让我值得一提的是，在准备专业课的过程中，我逐渐发现这门System and Signal的博大精深，我甚至觉得我本科四年的数据科学完全就是皮毛中的的皮毛。现代基于神经网络的深度学习很多理论都能够在这门基础学科中找到影子，包括但不局限于：“卷积”、“滤波”、“反馈”。除此之外，有关复变函数的数学也是让我大为惊叹。完备且充实的理论正是我喜欢的东西，我此时也总结出本科学习让我不自然的一点就是，我们专业删减了太多硬核内容，让我感觉学习浮于表面，学科考核也是纯凭报告字数和UI美观，缺少真正的理论知识的考核。 选导师 我之前选择跨考中科大信息学院的很重要一个原因是这个学院的6系有很多老师做的是深度学习、计算机视觉相关的多媒体方向，而这个方向和我本科所学内容有很大重合，我可以很好地衔接上知识展开工作。但是由于AI相关的方向异常火爆，6系这个方向的老师也大多是炙手可热的。这意味着很多老师在保研的时候就把大部分名额给分出去了，那留给考研生自然就没有多少的名额了。 意识到这点，我在大概9月份时候就开始给信院6系的很多老师发邮件、发简历介绍自己情况并询问是否还有名额可以留给我这个考研生。也不出我所料，大部分邮件都石沉大海，偶尔收到的回复要么是没有名额了要么是不收取考研生。 收到的来自一位老师的拒信 这其中的原因有很多，我也知道自己不是那么突出，但是如果仅仅是因为我是一个考研生从而来评判我，我感到十分地难过，不过这些也都在情理之中。考研生更迟地加入科研，能创造的价值更少，而且保研的学生优秀的比重会更高些，考研生在某种意义上算一类被淘汰者。 前前后后发了近100封邮件，都没有一个老师给我明确的回复，在我已经准备放弃时（当时离考研只剩下2个月了，而且我还是跨考，压力十分之大。对我来说如果进不了一个熟悉方向的实验室，那就算我考研初试过了，我也会十分不甘心，因此真的打算放弃考研去找工作了…）我偶然注意到刘东老师（也就是我现在的老板）的主页上一行醒目的字“尙有2022级硕士生少量统考名额，请有意向者仔细阅读申请说明”，我那叫一个开心啊，我觉得这是我绝无仅有的机会，我一定要好好把握住。最令人高兴地是，刘老师明确说明“拥有名额”、“统考生”，而且有明确的申请说明。当晚我就按照要求提交了邮件、简历并着手阅读要求的论文，撰写论文阅读报告。 功夫不负有心人，我在10月份国庆节过后获得了刘老师的offer——一份具有合同效益的同意接收函，这也就是说我的后顾之忧彻底解决了，我只需要耐下心来准备好当前的考试，或者说过了初试（至少当时是那么想的）我就稳了。 考试 我和我同班同学——曹老师在考试前在浦东附近定了2天的酒店，考试前一天晚上我们还在酒店里一起背政治，噗。说实话我没那么想背书，我一向不喜欢在考试前做太多抱佛脚的举措，可奈何曹老师“一代卷王”带着我愣是把政治肖4给带了一遍。不过也好，算是心理上的一种慰藉吧。当天晚上吃饭时，刘老师还给我微信（收到他offer后，我们就通过微信建立了联系）祝我考研顺利。我冥冥之中感觉我是稳稳当当会成为他的学生的，在这遇到这种大事之时，我的直觉都一向无比准确，包括高考前我一度认为我就是同济大学的学生一样，也可能是真的太想了吧，不是有人说，如果一个人极度想完成某件事那么他最终一定会通过各种方式完成吗？ 第一天晚上我几乎没睡，一直处于一种迷迷糊糊、半睡半醒的状态，精神极度兴奋，因为明天就是决定我未来走向的关键时刻… 考试的过程我不想太多地描述，记录几个关键词来补充多年后看到这篇文章缺失的记忆吧：上海第二工业大学、冷、第一排第一座靠门、风、信号无…考过试我十分平静地走出考场，那天夕阳尚存，宛如动漫里般浪漫的、红彤彤的阳光以小于45°的角度斜射在考场门口（其实我已经不记得那天是阴天还是晴天了，但是这样写挺美的），我踏出一步身后就拉出了长长的影子，拎着个考试袋，不匆不忙地走向校门。短暂地脱离内卷是多么幸福的一件事啊，也只有这种时刻我可以真正意义上的不慌不忙了，心里十分平静，什么思绪也没有，只想着快找到曹老师一起去吃顿好吃的吧。 关于考试的预测，首先我觉得我发挥的是比较正常的。我比较担心的专业课中，尽管有一道题涉及我完全没接触过的电路知识，但是除了那一道题目之外所有的题目我都大致可以给出一个较为明确的预判。关于数学，难度不得不承认是十分之大的，我也是考完事后就大概知道了所有题目的正确答案，并且预估自己可以达到125分左右的成绩。然而成绩出来后，我的数学只有111，专业课突出我的意料考到了124.不过成绩什么的都无所谓了，《这又不是高考，一道题都不能错》（笑。 大四下 那个寒假我很快乐，甚至是本科四年都没有过这么快乐的寒假，几乎每一天都有饭局，都在外面玩。浅浅总结一下，包括但不局限于：“清华组”、“初中组”、“Xinxin组”、“妈妈组”。当然，既然考完研了，除了玩之外我要做一些有实际意义的事，寒假期间，我为接下来的大四制定了一个轻松但是充实的学期计划。我在完成毕业设计的同时，我需要完善深度学习的理论知识，熟练pytorch的使用方法；我需要完成我因为考研遗留下的2学分的个性学分，而这会通过我选修的同济大学表演专业专业课——台词4来完成；我要加强运动，以更强的身体素质来应对研究生的生活；我想学习一些我觉得重要的东西，包括：如何建博客、javascript、篮球技术等等。 随后回到上海遇到的事，可以参见我另一篇文章开站之作 暑假 旅行 我没有为我的最后一个超过2个月的长假安排一个充实的计划，我只希望我能够拥有一场毕业旅行。在6月中旬结束了我的毕设答辩后，我就每天都在计划着和谁去何处玩，或者说是瞎想。为什么说是瞎想呢，首先我没有女朋友，不然的话与女朋友去出去好好玩一趟肯定是最好的选择；其次，我玩的好的朋友们，大多数都在二战考研；大学的朋友各有各的打算，有出国的、有实习的、也有躺平的，所以在人选方面我就不能确定。后来，我找到了一个去青海自驾游的车队，预计7月中旬出发。本来这个计划定下来就没什么好担心的了，但是在6月23号我突然接到我老板的微信，问我想不想参加一个Seminar。这个Seminar分为编程、写作和理论三个模块，建议研一新生参加编程模块。这样的活动我必须参加，我作为一个考研生，没有参与到大四下的组会当中，这样一个活动是我提前认识你实验室师兄、师姐还有同年级peer的好机会。而且我对图像、视频压缩编码这个领域也是完全没有接触过，这可能可以作为我的一个入门实践。但是一旦参加了这个为期一个月的Seminar，我7月份的旅游计划就彻底泡汤了。所以，我又开始焦虑了… 在得知这个消息的第二天我就开始疯狂询问我的朋友、亲戚，啊，有没有想出去玩的呀？有没有想看海的呀？（我一直很想再去一次海南，我觉得那里的海非常的好看），最后约定了我们四个表兄表弟去海南玩一趟。同样，关于这趟旅行，我也记录几个关键字：雨天、台风、自驾、别墅、水母…并留下2张阵雨前后的海滩for visual memory。 阵雨前 阵雨后 三亚的归途是一场惊心动魄的旅程，第一次身临其境的体验了台风，飞上天的那一刻才发现阳光是属于天空的，而云层之下仍然是灾难。 归途 Seminar 回来之后，我就抓紧投入了这个Seminar，任务包括：论文的阅读、代码的阅读、代码的编写、开会学习等等。由于我本科接触过很多Pytorch相关的项目，所以这个Seminar代码相关的任务倒没有花费太多功夫。主要的收获体现在了解了什么是端到端的图像编码、对信息论有了更进一步的认识、熟悉了将来要在一起工作学习的一帮伙伴。 Now 此刻是2022年8月16日，我在Seminar结束后放假回家休息了一周（在家里待得实在无聊），又回到了实验室。剩下的半个月我不希望整天无所事事的度过，我主要的计划是过一遍information theory，然后再看看VCM相关的论文，这可能是我接下来的主要研究方向。 我也意识到此刻我的思想有些许极端和偏激，但是不后悔，至少此刻我的人生才开始有意义起来。","categories":[{"name":"Think beyond the sky.","slug":"Think-beyond-the-sky","permalink":"https://esakak.github.io/categories/Think-beyond-the-sky/"}],"tags":[{"name":"生活","slug":"生活","permalink":"https://esakak.github.io/tags/%E7%94%9F%E6%B4%BB/"},{"name":"总结","slug":"总结","permalink":"https://esakak.github.io/tags/%E6%80%BB%E7%BB%93/"}]},{"title":"恩格玛机","slug":"20220507","date":"2022-05-07T03:01:40.000Z","updated":"2025-09-10T13:23:43.915Z","comments":true,"path":"2022/05/07/20220507/","link":"","permalink":"https://esakak.github.io/2022/05/07/20220507/","excerpt":"","text":"恩格玛机（Enigma） 介绍 恩尼格玛密码机（德语：Enigma，又译恩尼格密码机、哑谜机、奇谜机或谜式密码机）是一种用于加密与解密文件的密码机。确切地说，恩尼格玛是对二战时期纳粹德国使用的一系列相似的转子机械加解密机器的统称，它包括了许多不同的型号，为密码学对称加密算法的流加密。 20世纪20年代早期，恩尼格玛密码机开始应用于商业，一些国家的军队与政府也使用过该密码机，密码机的主要用户包括第二次世界大战时的纳粹德国。 在恩尼格玛密码机的所有版本中，最著名的是德国使用的军用版本。尽管此机器的安全性较高，但盟军的密码学家们还是成功地破译了大量由这种机器加密的信息。1932年，波兰密码学家马里安·雷耶夫斯基、杰尔兹·罗佐基和亨里克·佐加尔斯基根据恩尼格玛机的原理破译了它。早在1939年中期，波兰政府就将此破译方法告知了英国和法国，但直到1941年英国海军捕获德国U-110潜艇，从中得到密码机和密码本后才成功破译。对于恩尼格玛的破译使得纳粹海军对英美商船补给船的大量攻击失效。盟军的情报部门将破译出来的密码称为ULTRA，ULTRA极大地帮助了西欧的盟军部队。关于ULTRA到底对战争有多大贡献尚存争论，但普遍认为盟军在西欧的胜利能够提前两年，完全是恩尼格玛密码机被成功破译的缘故。 尽管恩尼格玛密码机在加密方面有不足之处，但是经其加密的文件依然很难破译。盟军能够破译恩尼格玛是因为德国军队犯了一些大的错误，如没有像海军一样每月更新密码、使用步骤错误、机器或密码本被缴获等等，但这在1944年后英国开发出原始电脑后，即使每月更新也无济于事。 相关破解工作 恩格玛机的前阶段破解主要归功于一些波兰数学家，如雷耶夫斯基等人。但是基于恩格玛机结构的破解方法，往往会因为恩格玛机器结构发生变化而失效，比如增加转子数量和改变接线板接线位置等。后期破解工作得益于英国数学家和密码学家们的贡献，其中就包括著名的计算机祖师爷——阿兰·图灵，他们改进了波兰战前研制的机器Bombe，一种可以找到恩尼格玛密码机设置的机电机器，并利用他从根本上破解了恩格玛机，大大推进了盟军在二战中的胜利进程。 阿兰·图灵 尽管这批科学家为二战密码工作做出了巨大的贡献，大大地推进了盟军的胜利，但是他们的事迹却因为工作特殊性而鲜有人知，许多人甚至在战争中流离失所、抑郁终身。图灵也因为性取向的原因遭受英国政府迫害，最终忍受不了激素治疗而自杀，年仅41岁。 2014年本尼迪克特·康伯巴奇饰演图灵的讲述图灵破解恩格玛机器人物传记电影——《模仿游戏》 模仿游戏 Enigma-Machine原理 凯撒密码（Caesar cipher） 罗马共和时期凯撒大帝曾发明一种文本加密方法，利用字母表的替换来对字母进行加密。交流者预先规定一个字母偏移量，根据字母偏移量将26个英文字母向后移动形成一张映射表，明文中的所有字母逐个对应字母表中的偏移字母产生暗文。 caesar cipher 上图为一个偏移量为3的凯撒密码字母表，所有的字母A将被替换成D，B变成E，以此类推，从而形成一种替换加密的效果。 一个n移位的凯撒密码编码过程可以理解为 $$ E_n(X)=(X+n)%26 $$ 解码过程则是 $$ D_n(X)=(X-n)%26 $$ 转子（Rotor） 凯撒密码需要一个特定偏移量来制定一张密码表，然后人为的依照密码表进行字母的映射操作，可否使用一个建议的装置来实现这样一个映射操作呢？ 很显然需要一个可以循环转动的表盘，这就是恩格玛机中的零件——转子。 转子 每一个转子相当于一张密码表，其表盘上分别是26个英文字母的触点，另一端连接着输入信号，当输入字母x时，经过转子会输出为y字母，从而完成映射。 转子转动的位置就可以代表偏移量，26个转动状态分别代表26个偏移量的偏移，也就是说一个转子可以实现26张密码字母表，这为恩格玛机复杂的编码过程提供了基础。 转子的编码具有“自反性”，即输入为x，输出为y时，当输入为y时，输出也是x。这为解码过程提供了相当大的便利。 多转子(Multiple Rotors) 一个转子的编解码至多只需要测试26张密码表就可以获得正确的结果，这显然是不能够作为密码传输的编码方式的，破解方只需要叫来26个人每个人按照一个偏移量（0~25）解码密文就一定可以有一份正确的明文。 解决这个问题的办法是增加转子的数量，即级联多个转子来进行编码，从一个转子输出的字母y不直接输出而是进入到下一个转子进行编码得到字母z。 多转子编码 一个n转子的结构，密码表数量就会是$26^n$个，当n=3时，密码表数目就会达到17576，这在没有计算机的二战时期已经是一个很大的数字了，纯暴力解法需要耗费大量的人力、物力。 三转子结构 然而，严谨的德国人当然不会满足于此，谁会知道盟军会不会真的叫来17576个人来对密文进行解码呢？ 接下来的地方才是恩格玛机真正变态的设计… 恩格玛机 如果说17576个密码表仍然有纯暴力破解的可能性，只需要每个人拿一张密码表进行翻译，17576个人中一定有一个人的译文是正确的，那么如果密码表不固定的话，怎么办？ 假设一个三转子结构的位置状态为AAA，即每一个转子的偏移都为0，这时候字母x传入结构会经过以下的过程 $$ x\\stackrel{A}{\\longrightarrow}x\\stackrel{A}{\\longrightarrow}x\\stackrel{A}{\\longrightarrow}x $$ 由于每个转子偏移都为0，所以会输出原始字符x。 如果这是张传统的密码表，即AAA的偏移状态，那么一个句子就会输出为原始的句子，这毫无疑问。 但是如果在x被编码后，就换一张密码表呢？也就是说每编码一个字母，转子状态就发生变化。这就无法用一张固定的密码表来解码一个句子了。 而恩格玛机就是这样做的，在每编码一个字母后，转子会发生一次转动，低位转子偏移量+1，对于AAA来说就会变成BAA。 对于一个句子’aaa’来说，在传统密码表AAA下的编码还是它本身aaa。但是在恩格玛机的结构下，就会经历以下的编码过程： 首先，第一个字母a进入恩格玛机，在状态为AAA的转子下编码为a； 之后，转子会转动一次，状态变为BAA，相当于换了一张密码表； 接着第二个字母a进入状态位BAA的恩格玛机 $$ a\\stackrel{B}{\\longrightarrow}b\\stackrel{A}{\\longrightarrow}b\\stackrel{A}{\\longrightarrow}b $$ 之后转子再次进行转动，状态变为CAA，又换了一张密码表； 最后一个字母a再次进入状态位CAA的机器 $$ a\\stackrel{C}{\\longrightarrow}c\\stackrel{A}{\\longrightarrow}c\\stackrel{A}{\\longrightarrow}c $$ 在密文长度不定和初始状态不确定的情况下，一个恩格玛机的结束状态是充满随机性的。当然盟军仍然可以叫来17576个人对一份密文进行破解，但是这样的工作量就会大大地提升，因为每个人在每映射玩一个字母就需要换一张字母表。而事实情况是，盟军根本叫不齐17576个人来进行这项工作。而且每天德军就会更换一次初始状态AAA，也就是说每一天盟军都需要在24小时里破解得到哪个初始的状态，否则这一天的工作就会全部白费。 由于恩格玛机的“自反特性”，恩格玛机的解密过程只需要设置相同的初始状态，即用于交流的秘钥AAA，再将密文输入恩格玛机，转子就会进行相同的转动过程对应起每一个字母的映射。 消除统计特征 尽管暴力求解不太可能实现，但是统计是可以解决很多看似困难的问题的。由于单词构造的习惯，在整个英文语料库中，字母使用的频率是不同的。比如凯撒密码，在单个字母表的映射下，每个字母的出现频率不会发生变化，只需要统计大量的密文将频率关系和日常语料库的字母频率对应起来就可以进行破解。统计特征在一张字母表下不会消除，但是如果使用两张字母表交替编码，这样的统计特征就会削弱，随着密码表数目的增加，统计直方图会趋于平稳。而恩格玛机，例如三转子恩格玛机就是使用了17576张字母表进行得编码，统计特征已经得到了十分强的削弱。 统计特征 尽管如此，统计特征却无法保证完全的消除，德国人做贼心虚，在之前的恩格玛机器基础上又加入了接线板装置。 恩格玛机器结构 接线板的作用就是让输入的字母不直接通过转子，而是先通过装置最底层的一个通路转换成另一个字母再通过装置进行编码。接线的位置可以任意人为随机的调整，几乎完全消除了统计特征。但是德国人并没有就此满足，他们仍然担心盟军会从大量的情报密文中找出规律，因此又设计了一种二次加密方法。这种方法让每一份电报文件拥有其独特的加密秘钥，由发报者自行随机的输入，并将该秘钥放在文件头部用以另一端进行解密，一份密文可能是以下的形式。 1234567KEYasd asdd asd aasd qweqw dqd f... 但是这样秘钥不就毫无裸露的交给了盟军了吗？这时候再使用每天的公共秘钥对KEY进行编码，实际上德军进行了两次编码，所以一份密文实际上会是以下的形式。 1234567YAMQALasd asdd asd aasd qweqw dqd f... 这样一来，“统计”这个词就失效了，因为能够利用的样本不再是报文本身，而只剩下开头的6个字母，样本不充分大就无法得到统计特征。 至此，纳粹认为他们的机器已经无法击破，然而正是这最后一步给图灵等人破解恩格玛机提供了契机… 破解恩格玛机 破解的过程可以通过上面这位UP主的视频了解。 恩格玛机的复现代码已经放到了我的github仓库Enigma-Machine。","categories":[{"name":"Just do it.","slug":"Just-do-it","permalink":"https://esakak.github.io/categories/Just-do-it/"}],"tags":[{"name":"学习","slug":"学习","permalink":"https://esakak.github.io/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"恩格玛机","slug":"恩格玛机","permalink":"https://esakak.github.io/tags/%E6%81%A9%E6%A0%BC%E7%8E%9B%E6%9C%BA/"},{"name":"编程","slug":"编程","permalink":"https://esakak.github.io/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"开站之作","slug":"20220427","date":"2022-04-27T07:14:34.000Z","updated":"2025-09-10T13:23:43.915Z","comments":true,"path":"2022/04/27/20220427/","link":"","permalink":"https://esakak.github.io/2022/04/27/20220427/","excerpt":"","text":"关于博客的一些说明 为什么开始？ 所有的事情都有一个why，难得的家里蹲大学半年，给我一个充足的时间回顾本科前三年的时光。 这几年莫非于追逐于GPA、保研和没保上花了一年时间的考研，我似乎可以不假思索地说：“这是我人生中最糟糕的几年”。我活得如同一具行尸走肉，被人塞以难以下噎的腐食。我在完成课程学习和课程任务之外，似乎没有额外的学习了（当然，这很大程度上是我自己的原因）。除了学习之外，我没有输出，只进不出只会让情绪积攒到难以发泄的地步。 我需要属于自己的学习空间和定期的为自己输出，既然开始，那就do it。 主题和框架 这是我第一次搭建博客，我原以为我会遇到技术上的问题，但过程中发现以我浅薄的计算机知识和前人提供的工具和框架，这却是一件有趣的事。 框架的选择经历了几个阶段: 完全不懂 了解Jekyll 更换hexo 稀里糊涂的使用hexo搭建一个傻瓜网站 算是弄懂了hexo静态博客搭建的原理 使用ButterFly theme 到现在为止，我应该可以弄明白大部分的问题了。主题链接ButterFly 风格 我最开始是想找到一款充满冰雪气息的theme的，hexo上倒是有一款但是布局不是很喜欢，那索性就用butterfly吧，自己可以diy成我想要的风格。 无可否认 Frozen FrozenII 给我带来的深远影响，因此我的博客风格（包括头像、图片和音乐等因素）很大程度上取材于这两部电影。 这会让我在写作和浏览的时候感到舒适~ 3.27 --&gt; 4.27 run之路 自3.9号我校出现一例阳性开始，学校实行了封闭式管理，我于3.9日当晚就离开了学校回到我的考研出租房里“静候佳音”，谁知等来的是长达半个多月的封闭时光。 在8平米的小房间里，我每天被各种小道消息充斥着头脑，还要完成课程和毕设任务，那段时间我的脑子是混沌的。 我不会烧饭，烧菜，除了以饺子、面条度日以外，我十分感谢隔壁同校老师对我的关照，我每日都会从她们那儿获得丰富的菜肴。 老师为我准备的饭菜 直到3月25日晚，我们小区终于结束了封控，我想去外面好好吃一顿。那个雨夜，我打着黑色的伞，心中怀着不可压抑的欢喜，我终于可以吃到好吃的了。谁可知来到大门口，霓虹灯映照着的黑漆漆的天空下竟是一片死寂… 我知道我该停止幻想了，但是第二天还要进行考研的复试，我必须完成这最后一步，就开润。 第二天的复试进行得相当不顺利，但是之后结果却也差强人意，这倒不是我要在这说的，我在整整等待了5个小时的复试结束会，下午5点钟赶着老师送我的车来到了最近的核酸检测机构——上海肝胆医院去做核酸。这个队伍排了将近4个小时，我于晚上10点回到了出租房，吃上了老师为我准备的简单的但是胜过一切山珍海味的鸡蛋炒饭，那晚必定是个无眠之夜。 我在前一天加起来等待超过8小时的情况下，27号这一天竟然早早地起了床，可能是由于肾上腺素分泌过多的原因，我不觉得有丝毫疲倦。我收拾了要带走的衣服，要存放在老师家的夏天的衣服（如果回的来的话…），之后把我的宝贝RTX 3070-Ti也从主板上卸下来揣在我书包里。 RTX 3070 Ti 顺丰寄走所有的东西后，我提起行李箱，走出了这个我住了1年多，陪伴我整个考研阶段的房间。 再见了！ 全国第二大的火车站——虹桥火车站从未如此冷清，熙熙攘攘的人群不再，只有零星的、落魄的人，和我一样。 隔离时光 回到合肥后，我没有立刻回自己家，我待在了我表哥的房子里，因为他们买了新房子倒也没有太大影响，一个人住就是。 不得不提，在回来的一路上社区的人不断打电话给我无非告诉我两条消息：1.你最好不要回来，可能会被抓取隔离；2.你回来了也要隔离，不要乱跑，会负责刑事责任的。如果我是个听话的好公民，可能就听她的了。 在隔离的时间里，我妈给我送了几次饭菜，大多数时间就是一个人解决饭菜，这一段时间我如果要详细叙述就会是流水账了，虽然我认为我现在写的也是流水账。 值的一说的是等待复试结果的那天，我确实十分紧张，这是最后一道门，跨过了这么多天的努力也就算画上一个完美的句号了，跨不过…我不知道该如何开始接下里的生活。我在看到隔壁10系的复试结果出来后，就一直守在浏览器前，不停地F5刷新页面，我刷了将近2个小时的页面，多希望6系官网能发出一则新的通告。结果我还是没等到，我待不住了，我下去倒垃圾。就在这时，我高中在6系读书的同学竟给我发来了贺信，这世界总是喜欢这么捉弄人啊！悬着的大石头终于落了下去，我知道我的人生该开始新的篇章了。 回到家中 尽管我离开了上海这个魔幻的城市，我仍然每天都关注着疫情和各种相关消息，此刻好像全国人民心里的弦都崩的很紧很紧，一点点刺激都足以割断脆弱的神经。什么向前看啊，等疫情后啊，调整好心态啊，都勾不起人任何的欲望，这似乎是一场政治焦虑，影响这座2500万人口的城市。我在想我但凡当初“听话”一点，那么等待我的就是第二天的全市隔离，这次过后我感觉我再也不会听话了。 我的生活回归了正常，白天学习，下午打一场球，晚上打游戏。这是我难得的时光，但我丝毫快乐不起来，我总感觉这是最后的快乐时光。 一切一切的计划都被打乱了，种种魔幻的事发生在我的周围，还好，我在路上（骑在银龙背上）。","categories":[{"name":"Think beyond the sky.","slug":"Think-beyond-the-sky","permalink":"https://esakak.github.io/categories/Think-beyond-the-sky/"}],"tags":[{"name":"学习","slug":"学习","permalink":"https://esakak.github.io/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"生活","slug":"生活","permalink":"https://esakak.github.io/tags/%E7%94%9F%E6%B4%BB/"}]}],"categories":[{"name":"Life","slug":"Life","permalink":"https://esakak.github.io/categories/Life/"},{"name":"Experimental Notes.","slug":"Experimental-Notes","permalink":"https://esakak.github.io/categories/Experimental-Notes/"},{"name":"Think beyond the sky.","slug":"Think-beyond-the-sky","permalink":"https://esakak.github.io/categories/Think-beyond-the-sky/"},{"name":"Just do it.","slug":"Just-do-it","permalink":"https://esakak.github.io/categories/Just-do-it/"}],"tags":[{"name":"生活","slug":"生活","permalink":"https://esakak.github.io/tags/%E7%94%9F%E6%B4%BB/"},{"name":"学习","slug":"学习","permalink":"https://esakak.github.io/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"传统编码","slug":"传统编码","permalink":"https://esakak.github.io/tags/%E4%BC%A0%E7%BB%9F%E7%BC%96%E7%A0%81/"},{"name":"总结","slug":"总结","permalink":"https://esakak.github.io/tags/%E6%80%BB%E7%BB%93/"},{"name":"恩格玛机","slug":"恩格玛机","permalink":"https://esakak.github.io/tags/%E6%81%A9%E6%A0%BC%E7%8E%9B%E6%9C%BA/"},{"name":"编程","slug":"编程","permalink":"https://esakak.github.io/tags/%E7%BC%96%E7%A8%8B/"}]}